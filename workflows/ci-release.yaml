name: ci-release
on:
  push:
    branches:
      - '**'
    paths-ignore:
      - "**.md"

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: write

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-lambdas:
    runs-on: [runners]
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python 3.12.x
        uses: actions/setup-python@v2
        with:
          python-version: 3.12.x

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
        
      - name: Install Dependencies
        run: source ~/.local/venv/bin/activate && pip install poetry ruff && deactivate
        working-directory: lambdas

      - name: Lint
        run: poetry run black --check .
        working-directory: lambdas

      - name: Test
        run: poetry run pytest --cov
        working-directory: lambdas

  build-and-push-lambdas:
    runs-on: [runners]
    timeout-minutes: 30
    steps:
    - name: Checkout
      uses: actions/checkout@v3
        
    - name: Set GIT variables
      run: |
        echo "SHORT_SHA=echo ${GITHUB_SHA} | cut -c1-7" >> $GITHUB_ENV
        echo "BRANCH_NAME=echo ${GITHUB_REF_NAME} | tr / _" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2.0.0
      with:
        role-to-assume: arn:aws:iam::999999999999:role/terraform-deployer
        aws-region: us-east-1
    
    - name: Login to Public ECR
      uses: aws-actions/amazon-ecr-login@v1.5.0
      with:
        registry-type: public

    - name: Login to Amazon ECR
      id: login-ecr-east
      uses: aws-actions/amazon-ecr-login@v1.5.0

    - name: Docker Build Lambdas
      env:
        REGISTRY: ${{ steps.login-ecr-east.outputs.registry }}
      run: |
        docker buildx build --platform linux/arm64 \
          -t 999999999999.dkr.ecr.us-east-1.amazonaws.com/thoughtful-ai-lambdas:${BRANCH_NAME}-${SHORT_SHA} \
          -f ${GITHUB_WORKSPACE}/lambdas/Dockerfile.lambdas \
          ${GITHUB_WORKSPACE}/lambdas

    - name: Docker Push Lambdas
      env:
        REGISTRY: ${{ steps.login-ecr-east.outputs.registry }}
      run: |
        docker push 999999999999.dkr.ecr.us-east-1.amazonaws.com/thoughtful-ai-lambdas:${BRANCH_NAME}-${SHORT_SHA}
      if: ${{ github.ref == 'refs/heads/main' }}
    
  tf:
    runs-on: [runners]
    timeout-minutes: 30
    needs: [test-lambdas, build-and-push-lambdas]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set GIT variables
        run: |
          echo "SHORT_SHA=echo ${GITHUB_SHA} | cut -c1-7" >> $GITHUB_ENV
          echo "BRANCH_NAME=echo ${GITHUB_REF_NAME} | tr / _" >> $GITHUB_ENV

      - name: Configure AWS credentials for us-east-1
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          role-to-assume: arn:aws:iam::999999999999:role/terraform-deployer
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: 1.5.3

      - name: Terraform Init
        id: tf-init
        run: |
          cd ${GITHUB_WORKSPACE}/terraform
          terraform init -backend-config="bucket=thoughtful-ai-tfstate" -backend-config="key=thoughtful-ai.tfstate"

      - name: Terraform Plan
        id: tf-plan
        env:
          TF_VAR_short_version: "${{env.SHORT_SHA}}"
          TF_VAR_docker_image_tag: "${{env.BRANCH_NAME}}-${{env.SHORT_SHA}}"
        run: |
          cd ${GITHUB_WORKSPACE}/terraform
          terraform plan --out tfplan.out

      - name: Terraform Apply
        id: tf-apply
        run: |
          cd ${GITHUB_WORKSPACE}/terraform
          terraform apply -auto-approve tfplan.out
        if: ${{ github.ref == 'refs/heads/main' }}
